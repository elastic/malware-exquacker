FROM docker.elastic.co/protections/python-base:latest AS base
FROM base AS builder

USER root
RUN apt-get update && apt-get install -y \
    python3-pip

ENV PYTHONFAULTHANDLER=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONHASHSEED=random \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=100 \
    POETRY_NO_INTERACTION=1 \
    POETRY_VIRTUALENVS_CREATE=false \
    PATH="$PATH:/runtime/bin" \
    PYTHONPATH="$PYTHONPATH:/runtime/lib/python3.9/site-packages" \
    # Versions:
    POETRY_VERSION=1.2.0b1

RUN curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python -
RUN python3 -m venv /runtime

# Generate requirements and install dependencies.
COPY pyproject.toml ./
RUN /runtime/bin/pip3 install --upgrade pip && \
    poetry --version && \
    poetry lock --no-plugins && \
    poetry export --no-plugins --without-hashes -f requirements.txt | /runtime/bin/pip3 install -r /dev/stdin

COPY . .
RUN poetry build && /runtime/bin/pip install dist/*.whl


FROM base as runtime

USER root
RUN apt-get update && apt-get clean
COPY --from=builder /runtime /runtime
# COPY --chown=pyuser . /source
# WORKDIR /source

USER pyuser

ENTRYPOINT /runtime/bin/malware-config-extractor --version

# To build and run in one command, use:
# $ docker run --rm -it $(docker build -q .)
