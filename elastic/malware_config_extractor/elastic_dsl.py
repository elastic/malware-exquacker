from elasticsearch_dsl import Document, Q, Search


def get_input_search(index: str, client: str = "input"):
    """
    This may seem overly complicated, but the purpose is to hopefully
    support evolving schemas if it comes to that.
    """
    _query = (Q("match", event__category="malware") | Q("match", event__category="intrusion_detection")) & Q(
        "match", process__Ext__memory_region__bytes_compressed_present=True
    )

    _search: Search = (
        Search(using="input", index=index)
        .query(_query)
        .source(
            includes=[
                "_id",
                "_index",
                "@timestamp",
                "agent.id",
                "file.hash.*",
                "process.Ext.memory_region.bytes_compressed",
                "process.args",
                "rule.*",
            ]
        )
    )

    return _search


class MalwareConfig(Document):
    pass
