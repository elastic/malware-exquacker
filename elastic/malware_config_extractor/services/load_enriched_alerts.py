from time import sleep

from confluent_kafka import Consumer

from elastic.malware_config_extractor import config, utils
from elastic.malware_config_extractor.loaders import StdoutEnrichedAlertLoader

logger = utils.default_logger(__name__)


def main():
    enriched_alert_loader = StdoutEnrichedAlertLoader()
    enriched_alert_loader._setup_io()

    c = Consumer(
        {
            "bootstrap.servers": "kafka",
            "group.id": "malware-exquacker",
            "auto.offset.reset": "earliest",
        }
    )

    c.subscribe([config.ENRICHED_ALERTS_TOPIC])

    while True:
        msg = c.poll(1.0)

        if msg is None:
            print("No message received...")
            sleep(5)
            continue
        if msg.error():
            print("Consumer error: {}".format(msg.error()))
            continue

        enriched_alert_loader.load(msg.value())

    c.close()


if __name__ == "__main__":
    utils.default_logger()
    main()
