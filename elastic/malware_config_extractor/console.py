import json
import logging
from typing import Dict

import click
import click_log
from marshmallow import Schema
from ruamel.yaml import YAML

from .config import MalwareExtractorConfigSchema, get_environ_config
from .utils import dedot_keys

DEFAULT_CONFIG = "config.yml"
logger = logging.getLogger(__name__)
click_log.basic_config(logger)


def configure(ctx, param, filename):
    logger.debug(f"Running configure() to process {filename}")
    schema: Schema = MalwareExtractorConfigSchema()

    yaml_reader = YAML(typ="safe")

    _default: Dict = schema.dump(schema.load({}))
    _yaml: Dict = {}
    try:
        with open(filename, mode="rt") as _fh:
            _yaml = dedot_keys(yaml_reader.load(_fh))
    except FileNotFoundError:
        logger.warn(f"No configuration file found at {filename}")

    _env: Dict = get_environ_config()

    _cfg = {**_default, **_yaml, **_env}

    return _cfg


@click.command()
@click_log.simple_verbosity_option(logger)
@click.option(
    "-c",
    "--config",
    type=click.Path(dir_okay=False),
    default=DEFAULT_CONFIG,
    callback=configure,
    is_eager=True,
    expose_value=False,
    help="Read options from the specified YAML file",
    show_default=True,
)
@click.option(
    "-d",
    "--daemon",
    default=False,
    is_flag=True,
    help="Detach and execute in the background [default: False]",
    show_default=True,
)
@click.option(
    "--oneshot",
    default=False,
    is_flag=True,
    help="Exit after one execution [default: False]",
    show_default=True,
)
@click.version_option(package_name="elastic.malware_config_extractor")
def main(**kwargs):
    logger.debug(json.dumps(kwargs, sort_keys=True, indent=4))

    logger.info(f"We did a thing.")


if __name__ == "__main__":
    main()
