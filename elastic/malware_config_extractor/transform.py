import os
from logging import getLogger
from queue import Queue
from threading import Thread

from scalpl import Cut  # See https://github.com/ducdetronquito/scalpl

logger = getLogger(__name__)


class MalduckTransform(Thread):
    def __init__(self, config: Cut, taskq: Queue, outq: Queue) -> None:
        super().__init__()

        self.config: Cut = config
        self.modules = None
        self.taskq = taskq
        self.outq = outq

        logger.debug(f"Parsed input config: {self.config}")

    def _setup_modules(self):
        if self.config["modules"]:
            logger.info("Getting os path of malduck modules...")
            self.modules = self.config["modules"] if self.config["modules"] \
                else logger.error("Please specify Malduck module path.")

    def run(self) -> None:
        self._setup_modules()
        try:
            # Attempt to get data from the queue.
            # .get() will block this thread's execution
            # until data is available
            malduck_input_event_bytes = self.taskq.get()

        except self.taskq.Empty:
            pass
