import json
import os
from importlib.metadata import version
from elasticsearch import Elasticsearch


def load_ecs_components(es_client: Elasticsearch) -> None:

    version: str = None
    _version_file: str = os.path.join([os.path.dirname(__file__), "ecs/version"])
    _mappings_path: str = os.path.join(
        [os.path.dirname(__file__), "ecs/generated/elasticsearch/composable"]
    )

    fieldsets = ["base", "event", "file", "process", "related", "rule", "threat"]
    with open(_version_file) as f:
        version = f.read()

    for root, _, files in os.walk(_mappings_path):
        for fname in files:
            fieldset_name, _ = os.path.splitext(os.path.basename(fname))
            if fieldset_name in fieldsets:
                component_name = f"ecs_{version}_{fieldset_name}"
                template: str = None
                with open(os.path.join(root, fname)) as f:
                    template = json.loads(f.read())

                es_client.put_component_template(component_name, template)


def load_mappings(es_client: Elasticsearch) -> None:

    version: str = version("elastic.malware_config_extractor")

    _mappings_path: str = os.path.join(
        [os.path.dirname(__file__), "templates/component"]
    )

    load_ecs_components(es_client)

    for root, _, files in os.walk(_mappings_path):
        for fname in files:
            fieldset_name, _ = os.path.splitext(os.path.basename(fname))

            component_name = f"esr_{version}_{fieldset_name}"
            template: str = None
            with open(os.path.join(root, fname)) as f:
                template = json.loads(f.read())

            es_client.put_component_template(component_name, template)
